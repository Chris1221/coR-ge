final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
output[(i/3-1),row] <- final
}
}
colnames(output) <- gen[,3]
seq(6,((ncol(gen)-2)),by=3)
seq(6,((ncol(gen)-2)),by=3)[1]
gen[1,6]
gen[1,9]
gen[1,]
gen[2,]
gen[3,]
gen[4,]
nrow(gen)
nrow(comb)
setwd("R")
for(file in c("gen2r.R", "rand0.R", "rand.R", "sim.gen.R")) source(file)
message("Loading packages...")
if (!require("pacman")) install.packages("pacman", "http://cran.utstat.utoronto.ca/")
library(data.table)
library(dplyr)
librar(magrittr)
library(magrittr)
gen <- read.table("../inst/extdata/toy.gen", h = F, sep = " ")
colnames(gen) <- paste0("V",1:ncol(gen))
summary <- fread("../inst/extdata/summary.out", h = T)
head(summary)
snps <- NULL
source("causal.snps.R")
snps <- causal.snps(summary = summary)
colnames(snps)[3] <- "V3"
comb <- as.data.frame(merge(gen, snps, by = "V3"))
comb$rsid <- NULL
comb$chromosome <- NULL
comb$all_maf <- NULL
comb$k <- NULL
source("gen2r.R")
combR <- gen2r(genfile = comb, local = TRUE)
#Read in genfile
if(local == TRUE){
gen <- genfile
} else if(local == FALSE){
gen <- fread(genfile, sep = " ", h = F); gen <- as.data.frame(gen)
}
output <- data.frame(matrix(nrow=((ncol(gen)-5)/3),ncol=(nrow(gen))))
for(row in 1:nrow(gen)) {
for(i in seq(6,((ncol(gen)-2)),by=3)) {
#print(row)
j <- i + 1
h <- i + 2
one <- gen[row,i]
two <- gen[row,j]
three <- gen[row,h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
output[(i/3-1),row] <- final
}
}
colnames(output) <- gen[,3]
#R_table <- cbind(samp,output)
return(output)
#rm(gen,samp,output)
}
head(comb)
head(gen)
head(snps)
nrow(snps)
nrow(gen)
cat(gen)
print(gen)
any(gen == 1)
gen == 1
any(gen == 1 || gen == 0 )
any(gen == 1 | gen == 0)
which(gen == 1 | gen == 0)
View(gen)
View(snps)
summary <- fread("../inst/extdata/summary.out", h = T)
nrow(summary)
summary <- fread("../inst/extdata/full.summary", h = T)
snps <- causal.snps(summary = summary)
colnames(snps)[3] <- "V3"
message("Merging together and converting from Oxford to R format...")
comb <- as.data.frame(merge(gen, snps, by = "V3"))
summary %>% sample_n(1000) %>% select(rsid, chromosome, position, all_maf) -> snps
nrow(snps)
colnames(snps)[3] <- "V3"
comb <- as.data.frame(merge(gen, snps, by = "V3"))
comb$rsid <- NULL
comb$chromosome <- NULL
comb$all_maf <- NULL
comb$k <- NULL
combR <- gen2r(genfile = comb, local = TRUE)
comb
head(comb)
inputFile <- "../inst/extdata/toy.gen"
read.table(inputFile)
?ecdf
inputFile <- "../inst/extdata/toy.gen"
con  <- file(inputFile, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
}
close(con)
myVector
library(foreach)
install.packages("foreach")
library(foreach)
myVector[3]
myVector[[3]]
myVector
colnames(comb)
colnames(gen)
head(gen)
r <- cbind(myVector, myVector)
r
r <- cbind(vector(myVector), vector(myVector))
typeof(myVector)
as.vector(unlist(myVector))
cbind(as.vector(unlist(myVector)), as.vector(unlist(myVector)))
cbind(as.vector(as.binary(unlist(myVector))), as.vector(unlist(myVector)))
cbind(as.vector(as.factor(unlist(myVector))), as.vector(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3)) %do% {
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
}
foreach(i = seq(6,((length(myVector)-2)),by=3)) %do%
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
seq(6,((length(myVector)-2)),by=3)
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- as.vector(unlist(strsplit(oneLine, " "))) }
con  <- file(inputFile, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- as.vector(unlist(strsplit(oneLine, " ")))
}
close(con)
myVector
typeof(myVector)
inputFile <- "../inst/extdata/toy.gen"
con  <- file(inputFile, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- as.vector(unlist(strsplit(oneLine, " ")))
foreach(i = seq(6,((length(myVector)-2)),by=3)) %do%
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
}
}
close(con)
myVector <- as.vector(as.factor(unlist(myVector)))
typeof(myVector)
length(myVector)
seq(6,((length(myVector)-2)),by=3)
inputFile <- "../inst/extdata/toy.gen"
con  <- file(inputFile, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3)) %do%
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
}
}
close(con)
inputFile <- "../inst/extdata/toy.gen"
con  <- file(inputFile, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3), .combine = c) %do%
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
}
}
close(con)
inputFile <- "../inst/extdata/toy.gen"
con  <- file(inputFile, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3), .combine = c) %do% {
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
}
}
close(con)
final
inputFile <- "../inst/extdata/toy.gen"
con  <- file(inputFile, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3), .combine = c) %do% {
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
final
}
}
close(con)
final
inputFile <- "../inst/extdata/toy.gen"
con  <- file(inputFile, open = "r")
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
out <- foreach(i = seq(6,((length(myVector)-2)),by=3), .combine = c) %do% {
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
final
}
}
close(con)
out
inputFile <- "../inst/extdata/toy.gen"
con  <- file(inputFile, open = "r")
out <- NULL
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3), .combine = c) %do% {
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
final
} %>% cbind(out, .) -> out
}
close(con)
out
ncol(out)
inputFile <- "../inst/extdata/toy.gen"
system.time({
con  <- file(inputFile, open = "r")
out <- NULL
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3), .combine = c) %do% {
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
final
} %>% cbind(out, .) -> out
}
close(con)
})
out
inputFile <- "../inst/extdata/toy.gen"
con  <- file(inputFile, open = "r")
out <- NULL
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3), .combine = c) %do% {
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
final
} %>% cbind(out, .) -> out
}
close(con)
(59560 * 6) / 60
(59560 * 0.6) / 60
inputFile <- "../inst/extdata/toy.gen"
system.time({
con  <- file(inputFile, open = "r")
out <- NULL
while (length(oneLine <- scan(con, what = integer(0), nlines = 1, quiet = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3), .combine = c) %do% {
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
final
} %>% cbind(out, .) -> out
}
close(con)
})
inputFile <- "../inst/extdata/toy.gen"
system.time({
con  <- file(inputFile, open = "r")
out <- NULL
while (length(oneLine <- scan(con, nlines = 1, quiet = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3), .combine = c) %do% {
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
final
} %>% cbind(out, .) -> out
}
close(con)
})
library(doSnow)
library(doSNOW)
install.packages("doSNOW")
library(doSNOW)
cluster = makeCluster(4, type = "SOCK")
registerDoSNOW(cluster)
stopCluster(cluster)
stopCluster(cluster)
cluster = makeCluster(4, type = "SOCK")
registerDoSNOW(cluster)
inputFile <- "../inst/extdata/toy.gen"
system.time({
con  <- file(inputFile, open = "r")
out <- NULL
while (length(oneLine <- readLines(con, n = 1, warn = FALSE)) > 0) {
myVector <- (strsplit(oneLine, " "))
myVector <- as.vector(as.factor(unlist(myVector)))
foreach(i = seq(6,((length(myVector)-2)),by=3), .combine = c) %dopar% {
j <- i + 1
h <- i + 2
one <- myVector[i]
two <- myVector[j]
three <- myVector[h]
final <- NA
if (one > 0.9) {
final <- 0
} else if (two > 0.9) {
final <- 1
} else if (three > 0.9) {
final <- 2
} else {
final <- NA
}
final
} %>% cbind(out, .) -> out
}
close(con)
})
out
