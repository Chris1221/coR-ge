{
    "contents" : "#' Correct strata by group\n#'\n#' Note that group name must be a factor\n#'\n#' @param strata Strata\n#' @param n_strata Number of strata\n#' @param assoc Assoc file path\n#'\n#' @importFrom data.table fread fwrite\n#' @importFrom magrittr %<>%\n#' @importFrom dplyr mutate filter filter_ %>%\n#'\n#' @return A data frame of FDR and sFDR by grouping level.\n#' @export\n\ncorrect <- function(strata = NULL, n_strata = NULL, assoc = NULL, group = FALSE, group_name = NULL, mode = \"default\"){\n\n  if(mode == \"default\"){\n\n  strata <- as.data.frame(strata)\n\n  if(group && is.null(group_name)) stop(\"Please name your group\")\n\n    out <- data.frame(sfdr = double(), fdr = double(), k = integer())\n\n  \tassoc.df <- fread(assoc, h = T)\n  \tstrata %<>%\n  \t\tmerge(assoc.df, by.x = \"rsid\", by.y = \"SNP\")\n\n  \tmessage(\"Calculating sFDR and FDR\")\n\n  \tstrata %>%\n  \t\tfilter(s == 1) %>%\n  \t\tmutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n  \t\tfdr(.) ->\n  \t\ts1\n\n  \tstrata %>%\n  \t\tfilter(s == 2) %>%\n  \t\tmutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n  \t\tfdr(.) ->\n  \t\ts2\n\n  \tstrata %>%\n  \t\tmutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n  \t\tfdr(.) ->\n  \t\tagg\n\n  \tsfdr <- (s1[1]+s2[1]) / (s1[1]+s2[1] + s1[2]+s2[2])\n  \tfdr <- agg[3]\n\n  \tout[1,] <- c(sfdr, fdr, \"all\")\n\n  if(group) {\n\n  j <- 1\n    for(i in levels(strata[, get(group_name)])){\n\n      strata %>%\n        filter(s == 1) %>%\n        filter_(paste0(group_name, \"==\", i)) %>%\n        mutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n        fdr(.) ->\n        s1\n\n      strata %>%\n        filter(s == 2) %>%\n        filter_(paste0(group_name, \"==\", i)) %>%\n        mutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n        fdr(.) ->\n        s2\n\n      strata %>%\n        filter_(paste0(group_name, \"==\", i)) %>%\n        mutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n        fdr(.) ->\n        agg\n\n\n      sfdr <- (s1[1]+s2[1]) / (s1[1]+s2[1] + s1[2]+s2[2])\n      fdr <- agg[3]\n\n      out[nrow(out)+1,] <- c(sfdr, fdr, i)\n      j <- j+1\n\n    }\n  }\n  } else if(mode == \"ld\"){\n      strata <- as.data.frame(strata)\n\n      if(group && is.null(group_name)) stop(\"Please name your group\")\n\n      out <- data.frame(sfdr = double(), fdr = double(), k = integer(), th = double())\n\n      assoc.df <- fread(assoc, h = T)\n      strata %<>%\n        merge(assoc.df, by.x = \"rsid\", by.y = \"SNP\")\n\n      for(th in levels(as.factor(strata$ld))){\n        k <- 1\n\n        message(\"Calculating sFDR and FDR\")\n\n        strata %>%\n          filter(s == 1) %>%\n          mutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n          fdr(., mode = \"ld\", level = th) ->\n          s1\n\n        strata %>%\n          filter(s == 2) %>%\n          mutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n          fdr(.,  mode = \"ld\", level = th) ->\n          s2\n\n        strata %>%\n          mutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n          fdr(., mode = \"ld\", level = th) ->\n          agg\n\n        sfdr <- (s1[1]+s2[1]) / (s1[1]+s2[1] + s1[2]+s2[2])\n        fdr <- agg[3]\n\n        out[nrow(out)+1,] <- c(sfdr, fdr, \"all\", th)\n\n\n        if(group) {\n\n        message(\"Grouping\")\n          for(i in levels(as.factor(strata[, group_name]))){\n\n            strata %>%\n              filter(s == 1) %>%\n              filter_(paste0(group_name, \"==\", i)) %>%\n              mutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n              fdr(., mode = \"ld\", level = th) ->\n              s1\n\n            strata %>%\n              filter(s == 2) %>%\n              filter_(paste0(group_name, \"==\", i)) %>%\n              mutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n              fdr(., mode = \"ld\", level = th) ->\n              s2\n\n            strata %>%\n              filter_(paste0(group_name, \"==\", i)) %>%\n              mutate(p.adj = p.adjust(P, method = \"BH\")) %>%\n              fdr(., mode = \"ld\", level = th) ->\n              agg\n\n\n            sfdr <- (s1[1]+s2[1]) / (s1[1]+s2[1] + s1[2]+s2[2])\n            fdr <- agg[3]\n\n            out[nrow(out)+1,] <- c(sfdr, fdr, i, th)\n\n          }\n\n        }\n      }\n\n  }\n\n\n  \t  return(out)\n\n}\n",
    "created" : 1465143514433.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4247820510",
    "id" : "A31ABE25",
    "lastKnownWriteTime" : 1465162952,
    "path" : "~/repos/coR-ge/R/correct.R",
    "project_path" : "R/correct.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}